@page "/servers/{id:int}"
@inject NavigationManager navigation
@using Microsoft.AspNetCore.Components

<h3>Edit Server</h3>
<br/>
<br/>

@if(server != null)
{
    
    <EditForm Model ="server" FormName="fromserver" OnValidSubmit="Submit" >
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <ValidationSummary></ValidationSummary>
        <InputNumber @bind-Value="server.ServerId" hidden ></InputNumber>
    <div class="row mb-3">
        <div class ="col-2">
            <label class ="col-form-label">Name</label>
        </div>
        <div class ="col-6">
                <InputText @bind-Value="server.Name"></InputText>
        </div>
    
        <div class="col">
            <ValidationMessage For ="() => server.Name"></ValidationMessage>
        </div>
    </div>

    <div class="row mb-3">
        <div class ="col-2">
            <label class ="col-form-label">City</label>
        </div>
      
        <div class ="col-6">
                <InputText @bind-Value="server.City"></InputText>
        </div>
          <div class="col">
            <ValidationMessage For ="() => server.City"></ValidationMessage>
        </div>
    </div>

    <div class="row mb-3">
        <div class ="col-2">
            <label class ="col-form-label">Online</label>
        </div>
        <div class ="col-6">
                <InputCheckbox @bind-Value="server.IsOnline" class="form-check-input"></InputCheckbox>
        </div>
    </div>

    <br/>
    <button class="btn btn-primary" type="submit">Update</button>
    &nbsp<a href="/servers" class="btn btn-primary">Close</a>
</EditForm>
   
}

<br/>

@code 
{
[Parameter]
public int id {get;set;}

[SupplyParameterFromForm(FormName ="fromserver")]
private Server? server {get;set;}

protected override void OnParametersSet()
{
   server??= ServersRepository.GetServerById(this.id);

}
 
private void Submit()
{

if(server != null)

  {
    ServersRepository.UpdateServer(server.ServerId, server);
    navigation.NavigateTo("/Error");

   }
}

} 